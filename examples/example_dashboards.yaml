--- # A list of dashboards
- title: Test Dasbboard 1
  graphs: # Each Dashboard can have 1 or more graphs in it.
    - title: Node cpu # Graphs have titles
      query_type: Range # The type of graph. Range for timeseries and Scalar for point in time
      d3_tick_format: "~s" # Default tick format for the graph y axis
      plots: # List of pluts to show on the graph
        - source: http://heimdall:9001 # Prometheus source uri for this plot
          query: 'sum by (instance)(irate(node_cpu_seconds_total{job="nodestats"}[5m]))' # The PromQL query for this plot
          meta: # metadata for this plot
            name_format: "`${labels.instance}`" # javascript template literal to format the trace name
            fill: tozeroy
            #d3_tick_format: "~%" # d3 tick format override for this plot's yaxis
            #named_axis: "y" # yaxis name to use for this subplots traces
      span: # The span for this range query
        end: now # Where the span ends. RFC3339 format with special handling for the now keyword
        duration: 1d # duration of the span. Uses SI formatting for duration amounts.
        step_duration: 10min # step size for the duration amounts.
- title: Test Dasbboard 2
  span: # Dashboards can have default spans that get used if there is no override for the graph
    end: 2024-02-10T00:00:00.00Z
    duration: 2 days
    step_duration: 1 minute
  graphs:
    - title: Node cpu percent
      d3_tick_format: "~%"
      query_type: Range
      plots:
        - source: http://heimdall:9001
          query: |
            sum by (instance)(irate(node_cpu_seconds_total{mode="system",job="nodestats"}[5m])) / sum by (instance)(irate(node_cpu_seconds_total{job="nodestats"}[5m]))
          meta:
            d3_tick_format: "~%"
            name_format: "`${labels.instance} system`"
            named_axis: "y"
        - source: http://heimdall:9001
          query: |
            sum by (instance)(irate(node_cpu_seconds_total{mode="user",job="nodestats"}[5m])) / sum by (instance)(irate(node_cpu_seconds_total{job="nodestats"}[5m]))
          meta:
            d3_tick_format: "~%"
            name_format: "`${labels.instance} user`"
            named_axis: "y"
    - title: Node memory
      query_type: Scalar
      plots:
        - source: http://heimdall:9001
          query: 'node_memory_MemFree_bytes{job="nodestats"}'
          meta:
            name_format: "`${labels.instance}`"
